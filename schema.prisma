datasource db {
    provider = "postgresql"
    url      = "postgresql://postgres:postgres@localhost:5432/crossing_dev"
}

generator db {
    provider = "go run github.com/prisma/prisma-client-go"
}

model User {
    id              Int    @default(autoincrement()) @id
    createdAt       DateTime  @default(now())
    deletedAt       DateTime?
    updatedAt       DateTime  @updatedAt
    discordUserId   String    @unique
    email           String?   @unique
    discordUsername String?   @unique
    firstName       String?
    lastName        String?
    avatar          Avatar?
}

model Avatar {
    id             Int           @default(autoincrement()) @id
    createdAt      DateTime         @default(now())
    deletedAt      DateTime?
    updatedAt      DateTime         @updatedAt
    User           User             @relation(fields: [userId], references: [id])
    userId         Int
    RaidAttack     RaidAttack[]
    AvatarsOnRaids AvatarsOnRaids[]
}

model Raid {
    id                 Int              @default(autoincrement()) @id
    createdAt          DateTime            @default(now())
    deletedAt          DateTime?
    updatedAt          DateTime            @updatedAt
    startTime          DateTime            @default(now())
    endTime            DateTime?
    completionProgress Float               @default(0)
    active             Boolean
    playerLimit        Int
    RaidAttack         RaidAttack[]
    AvatarsOnRaids     AvatarsOnRaids[]
    RaidBossesOnRaids  RaidBossesOnRaids[]
}

model RaidBoss {
    id                Int              @default(autoincrement()) @id
    createdAt         DateTime            @default(now())
    deletedAt         DateTime?
    updatedAt         DateTime            @updatedAt
    name              String              @unique
    image             String?
    RaidBossesOnRaids RaidBossesOnRaids[]
    RaidAttack        RaidAttack[]
}

model RaidAttack {
    createdAt  DateTime  @default(now())
    deletedAt  DateTime?
    updatedAt  DateTime  @updatedAt
    raid       Raid      @relation(fields: [raidId], references: [id])
    raidId     Int
    avatar     Avatar    @relation(fields: [avatarId], references: [id])
    avatarId   Int
    RaidBoss   RaidBoss  @relation(fields: [raidBossId], references: [id])
    raidBossId Int

    @@id([raidId, avatarId, raidBossId])
}

model AvatarsOnRaids {
    createdAt DateTime  @default(now())
    deletedAt DateTime?
    updatedAt DateTime  @updatedAt
    raid      Raid      @relation(fields: [raidId], references: [id])
    raidId    Int
    avatar    Avatar    @relation(fields: [avatarId], references: [id])
    avatarId  Int

    @@id([raidId, avatarId])
}

model RaidBossesOnRaids {
    createdAt  DateTime  @default(now())
    deletedAt  DateTime?
    updatedAt  DateTime  @updatedAt
    raid       Raid      @relation(fields: [raidId], references: [id])
    raidId     Int
    raidBoss   RaidBoss  @relation(fields: [raidBossId], references: [id])
    raidBossId Int

    @@id([raidId, raidBossId])
}
